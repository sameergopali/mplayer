package com.example.mplayer;

import java.io.IOException;

import android.app.Activity;
import android.media.AudioManager;
import android.media.MediaPlayer;
import android.media.audiofx.Equalizer;
import android.media.audiofx.Visualizer;
import android.os.Bundle;
import android.util.Log;
import android.widget.Toast;

public class visualizerActivity extends Activity{
	private MediaPlayer player;
	private Visualizer visualizer;
	private VisualizerView mVisualizerView;
	 private String  path;
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.visualizerview_main);
		
		mVisualizerView = (VisualizerView) findViewById(R.id.myvisualizerview);
		Bundle extras =getIntent().getExtras();
		if(extras!=null){
		  path = extras.getString("path");
		  Toast.makeText(getApplicationContext(),
                  "Position :"+path, Toast.LENGTH_LONG)
                  .show();
		}
		initAudio();
	     
	}
	
	@Override
	protected void onPause(){
		super.onPause();
		if(isFinishing()&& player!=null){
			visualizer.release();
			player.release();
			player= null;
			
		}
	}
	  private void initAudio(){
	    	 setVolumeControlStream(AudioManager.STREAM_MUSIC);
	    	//
	    	 player=new MediaPlayer();
	    	 try {
				player.setDataSource(path);
			} catch (IllegalArgumentException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (SecurityException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (IllegalStateException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
	    	 try {
				player.prepare();
			} catch (IllegalStateException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
	    			 
	    	 
	    	 
	    	 setupVisualizerFxAndUI();
	    	 visualizer.setEnabled(true);
	    	 player.setOnCompletionListener(new MediaPlayer.OnCompletionListener(){
	    		 public void onCompletion(MediaPlayer mediaPlayer){
	    		   visualizer.setEnabled(false);
	    		 }
	    	    }
	    	 
	            );
	    	// player.start();
	    	 }
	    	 
	    	 
	  private void setupVisualizerFxAndUI(){
	    	Equalizer mEqualizer = new Equalizer(0, player.getAudioSessionId());
	   
	    	mEqualizer.setEnabled(false);
	    	  visualizer =new Visualizer(player.getAudioSessionId());
	    	  visualizer.setCaptureSize(Visualizer.getCaptureSizeRange()[1]);
	    	 visualizer.setDataCaptureListener(new Visualizer.OnDataCaptureListener() {
				
				@Override
				public void onWaveFormDataCapture(Visualizer visualizer, byte[] waveform,
						int samplingRate) {
					// TODO Auto-generated method stub
				  mVisualizerView.updateVisualizer(waveform);
				  
					
				}
				@Override
				public void onFftDataCapture(Visualizer visualizer, byte[] fft,
						int samplingRate) {
					// TODO Auto-generated method stub
					
				}
			},Visualizer.getMaxCaptureRate()/2,true,false) ;
	    	 Log.d("Tag",String.valueOf(Visualizer.getMaxCaptureRate()));
	  
	    }

}
